/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package Manager;

import Entity.CartInfo;
import Until.DBHelper;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;


/**
 *
 * @author Hiba Habli
 */
public class CartManager {

    DBHelper db;

    public CartManager() throws Exception {
        this.db = new DBHelper();
    }

    public int createCart(CartInfo info) {
        try {
            String sql = "insert into Cart (PackageId, Total, Workshop)"
                    + " values(" + info.packageId + ", "+info.total+" , "+info.workshop+")";

            return this.db.executeSQL(sql).get(0);// this is ID generated by the DB
        } catch (SQLException ex) {
            return -1;
        }
    }

    public int updateCartUser(CartInfo info) {
        try {
            String sql = "Update Cart SET UserId =" + info.userId + ", Food = '"+info.food +"' WHERE Id = " + info.Id;

             
                   this.db.executeSQL(sql);// this is ID generated by the DB
                   return 0;
        } catch (SQLException ex) {
            return -1;
        }
    }
    
      public int updateCartPaperID(CartInfo info) {
        try {
            String sql = "Update Cart SET PaperId =" + info.paperId + " , Total =Total+ "+info.total +" WHERE Id =" + info.Id;

             
                   this.db.executeSQL(sql);// this is ID generated by the DB
                   return 0;
        } catch (SQLException ex) {
            return -1;
        }
    }
     public int addWorkshop(CartInfo info) {
        try {
            String sql = "Update Cart SET Workshop =" + info.workshop + ", Total = Total+ "+info.total +" WHERE Id = " + info.Id;

                   this.db.executeSQL(sql);// this is ID generated by the DB
                   return 0;
        } catch (SQLException ex) {
            return -1;
        }
    }
      public int updateCartBilling(CartInfo info) {
        try {
            String sql = "Update Cart SET CreditCardId =" + info.creditCardID + ", AddressId = '"+info.addressID +"' WHERE Id = " + info.Id;

             
                   this.db.executeSQL(sql);// this is ID generated by the DB
                   return 0;
        } catch (SQLException ex) {
            return -1;
        }
    }
      
      public int updatePaymentChoice(CartInfo info) {
        try {
            String sql = "Update Cart SET Paid = " + info.paid + " WHERE Id = " + info.Id;

             
                   this.db.executeSQL(sql);// this is ID generated by the DB
                   return 0;
        } catch (SQLException ex) {
            return -1;
        }
    }
      public int editCartUser(CartInfo info) {
        try {
            String sql = "Update Cart SET Food = '"+info.food +"' WHERE UserId = " + info.userId;

             
                   this.db.executeSQL(sql);// this is ID generated by the DB
                   return 0;
        } catch (SQLException ex) {
            return -1;
        }
    }
      public List<CartInfo> listAll(int userId) throws Exception {
        List<CartInfo> lst = new ArrayList<CartInfo>();
        String sql = "select * from Cart WHERE UserId = " +userId ;
        ResultSet rs = this.db.getSQLResult(sql);
        while (rs.next()) {
            CartInfo info = new CartInfo();
            info.Id= rs.getInt("Id");
            info.packageId= rs.getInt("PackageId");
            info.workshop= rs.getBoolean("Workshop");
            info.paid= rs.getBoolean("Paid");
            info.total = rs.getFloat("Total");
            info.addressID= rs.getInt("AddressId");
            info.food = rs.getString("Food");
            info.paperId = rs.getInt("PaperId");
            info.creditCardID = rs.getInt("CreditCardId");
            info.userId = rs.getInt("UserId");
            lst.add(info);
        }
        return lst;
    }
      
       public List<CartInfo> listAllById(int cartId) throws Exception {
        List<CartInfo> lst = new ArrayList<CartInfo>();
        String sql = "select * from Cart WHERE Id = " +cartId ;
        ResultSet rs = this.db.getSQLResult(sql);
        while (rs.next()) {
            CartInfo info = new CartInfo();
            info.Id= rs.getInt("Id");
            info.packageId= rs.getInt("PackageId");
            info.workshop= rs.getBoolean("Workshop");
            info.paid= rs.getBoolean("Paid");
            info.total = rs.getFloat("Total");
            info.addressID= rs.getInt("AddressId");
            info.food = rs.getString("Food");
            info.paperId = rs.getInt("PaperId");
            info.creditCardID = rs.getInt("CreditCardId");
            info.userId = rs.getInt("UserId");
            lst.add(info);
        }
        return lst;
    } 
 
   
}

